problem link (coding ninjas) : - https://www.codingninjas.com/codestudio/problems/set-matrix-zeros_8230862?challengeSlug=striver-sde-challenge&leftPanelTab=1
first I came up with the solution that if zero appear make whole row and column to zero but after thinking the 
edge case is that if we make before numbers also zero then the function runs for all zeroes so that failed 
next I came up with a solution that instead of making zero first I made -1 and then I converted that matrix into zeroes... but it is not optimized as it takes o(n^3) complexity....

import java.io.*;
import java.util.* ;

public class Solution {
     public static void setZeros(int matrix[][]) {

        for(int i =0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                if(matrix[i][j] == 0){
                    helper(matrix, i, j);
                }
            }
        }
        for(int i =0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                if(matrix[i][j] == -1){
                    matrix[i][j] = 0;
                }
            }
        }

    }
    public static void helper(int [][] matrix , int row , int col){
        for(int i =0;i<matrix.length;i++){
            if(i !=  row){
                if(matrix[i][col] == 0){
                matrix[i][col] = 0;
                }
                else{
                matrix[i][col]  = -1;
                }
            }
            

        }
        for(int i =0;i<matrix[row].length;i++){
            if(i !=  col){
                if(matrix[row][i] == 0){
                matrix[row][i] = 0;
                }
                else{
                    matrix[row][i] = -1;
                }
            }
            
        }
    }
}
